{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","id","className","ContactFormStyle","form_button","Component","ContactList","contacts","onDeleteContact","map","contact","ContactListStyle","button_delete","onClick","Filter","onChangeFilter","filterInputId","FilterStyle","filter","App","formSubmitHandler","data","normalizedName","toLowerCase","includes","alert","uuidv4","deleteContact","currentId","changeFilter","prevState","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","normalizedFilter","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,cAAgB,qC,mBCAlCD,EAAOC,QAAU,CAAC,OAAS,yB,uLC4DZC,E,4MAvDXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGhBC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EACtBE,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAgBD,EAAME,cAAcT,KAAOO,EAAME,cAAcC,S,EAIjEC,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAGPA,MAAQ,WACJ,EAAKP,SAAS,CAACR,KAAM,GAAIC,OAAQ,M,4CAIrC,WACE,OACA,uBAAMa,SAAUE,KAAKL,aAArB,UACE,2CACA,wBAAOM,QAASD,KAAKd,YAArB,iBACF,uBACEgB,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRX,MAAOM,KAAKjB,MAAMC,KAClBsB,SAAUN,KAAKV,aACfiB,GAAIP,KAAKd,iBAGX,wBAAOe,QAASD,KAAKX,cAArB,mBACI,uBACFa,KAAK,MACLlB,KAAK,SACLmB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRX,MAAOM,KAAKjB,MAAME,OAClBqB,SAAUN,KAAKV,aACfiB,GAAIP,KAAKX,mBAGX,wBAAQmB,UAAWC,IAAiBC,YAAaR,KAAK,SAAtD,gC,GArDsBS,a,iBC4BXC,EA5BK,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,gBAAZ,OAChB,6BACKD,EAASE,KAAI,SAAAC,GAAO,OACrB,+BACCA,EAAQhC,KAAO,KAAOgC,EAAQ/B,OAE7B,wBACAuB,UAAWS,IAAiBC,cAC1BhB,KAAK,SACLlB,KAAK,SACLmC,QAAS,kBAAIL,EAAgBE,EAAQT,KAJvC,sBAHOS,EAAQT,U,iBCaVa,EAhBA,SAAC,GAA4B,IAA3B1B,EAA0B,EAA1BA,MAAO2B,EAAmB,EAAnBA,eACdC,EAAgBnC,IAAQC,WAC9B,OAAO,sBAAKoB,UAAWe,IAAYC,OAA5B,UACH,0CACJ,wBAAQvB,QAASqB,EAAjB,2BACA,uBACEpB,KAAK,OACLlB,KAAK,SACLqB,UAAQ,EACRX,MAAOA,EACPa,GAAIe,EACJhB,SAAUe,WCwDDI,E,4MA/Db1C,MAAQ,CACN8B,SAAU,GACVW,OAAQ,I,EAGZE,kBAAoB,SAACC,GACnB,IAAMC,EAAiBD,EAAK3C,KAAK6C,cAKnC,GAJmB,EAAK9C,MAAM8B,SAC3BE,KAAI,SAACC,GAAD,OAAaA,EAAQhC,KAAK6C,iBAC9BC,SAASF,GAGVG,MAAM,GAAD,OAAIJ,EAAK3C,KAAT,gCACA,CAAG,IAAMgC,EAAO,aACnBT,GAAIyB,eACDL,GAEL,EAAKnC,UAAS,gBAAEqB,EAAF,EAAEA,SAAF,MAAiB,CAC7BA,SAAS,GAAD,mBAAMA,GAAN,CACNG,U,EAGJiB,cAAgB,SAACC,GACnB,EAAK1C,UAAS,YACZ,MAAO,CACLqB,SAFwB,EAAZA,SAEOW,QAAO,qBAAEjB,KAAe2B,U,EAK/CC,aAAe,SAAC5C,GAChB,EAAKC,SAAS,CAACgC,OAAQjC,EAAME,cAAcC,S,wDAG3C,SAAmB0C,GACdpC,KAAKjB,MAAM8B,WAAauB,EAAUvB,UACnCwB,aAAaC,QAAQ,WAAYC,KAAKC,UAAUxC,KAAKjB,MAAM8B,a,+BAI/D,WACE,IAAMA,EAAWwB,aAAaI,QAAQ,YAChCC,EAAiBH,KAAKI,MAAM9B,GAClCb,KAAKR,SAAS,CAACqB,SAAU6B,M,oBAGzB,WAEE,IAAME,EAAmB5C,KAAKjB,MAAMyC,OAAOK,cAErCgB,EAAkB7C,KAAKjB,MAAM8B,SAASW,QAAO,SAAAR,GAAO,OACxDA,EAAQhC,KAAK6C,cAAcC,SAASc,MAG1C,OACA,gCACE,cAAC,EAAD,CAAa9C,SAAUE,KAAK0B,oBAC5B,cAAC,EAAD,CAAQF,OAAQxB,KAAKjB,MAAMyC,OAAQH,eAAgBrB,KAAKmC,eACxD,cAAC,EAAD,CAAatB,SAAUgC,EAAiB/B,gBAAiBd,KAAKiC,uB,GA5D9CtB,aCAlBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.069512bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_button\":\"ContactForm_form_button__2VwIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_delete\":\"ContactList_button_delete__mglEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__22Rd_\"};","import React, {Component} from 'react';\r\nimport shortid from 'shortid';\r\nimport ContactFormStyle from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  \r\n    state = {    \r\n        name: '',\r\n        number: ''\r\n  }\r\n\r\nnameInputId = shortid.generate();\r\nnumberInputId = shortid.generate();\r\n  handleChange = event =>{\r\n    this.setState({[event.currentTarget.name]: event.currentTarget.value})\r\n  }\r\n\r\n  \r\n  handleSubmit = event =>{\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  }\r\n\r\n  reset = () =>{\r\n      this.setState({name: '', number: ''});\r\n  }\r\n\r\n\r\n  render (){\r\n    return (\r\n    <form onSubmit={this.handleSubmit}>\r\n      <h1>Phonebook</h1>\r\n      <label htmlFor={this.nameInputId}>Name\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required\r\n      value={this.state.name}\r\n      onChange={this.handleChange}\r\n      id={this.nameInputId}\r\n    />\r\n    </label>\r\n    <label htmlFor={this.numberInputId}>Number\r\n        <input\r\n      type=\"tel\"\r\n      name=\"number\"\r\n      pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n      title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n      required\r\n      value={this.state.number}\r\n      onChange={this.handleChange}\r\n      id={this.numberInputId}\r\n    />\r\n    </label>\r\n    <button className={ContactFormStyle.form_button} type=\"submit\">Add contact</button>\r\n    </form>)\r\n    }\r\n}\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListStyle from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) =>(\r\n    <ul>\r\n        {contacts.map(contact => \r\n        <li key={contact.id}>\r\n        {contact.name + \": \" + contact.number}\r\n        {\r\n          <button\r\n          className={ContactListStyle.button_delete}\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={()=>onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        }\r\n      </li>)}\r\n    </ul>\r\n    )\r\n\r\n    ContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }))\r\n}\r\n\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport FilterStyle from \"./Filter.module.css\";\r\n\r\nconst Filter = ({value, onChangeFilter}) =>{\r\n    const filterInputId = shortid.generate();\r\n    return(<div className={FilterStyle.filter}>\r\n        <h2>Contacts</h2>\r\n    <label  htmlFor={filterInputId}>Filter by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      required\r\n      value={value}\r\n      id={filterInputId}\r\n      onChange={onChangeFilter}\r\n    /></label></div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, {Component} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nclass App extends Component {\n  \n  state = {\n    contacts: [],\n    filter: ''\n  }\n\nformSubmitHandler = (data) =>{\n  const normalizedName = data.name.toLowerCase();\n  const sameName = this.state.contacts\n  .map((contact) => contact.name.toLowerCase())\n  .includes(normalizedName);\n\nif (sameName) {\n  alert(`${data.name} is already in contacts`);\n} else {  const contact ={\n    id: uuidv4(),\n    ...data\n  }\n  this.setState(({contacts}) => ({\n    contacts: [...contacts, \n      contact]}));\n}};\n\n  deleteContact = (currentId) =>{\nthis.setState(({contacts})=>{\n  return {\n    contacts: contacts.filter(({id}) => id !== currentId)\n  }\n})\n  };\n\nchangeFilter = (event) =>{\nthis.setState({filter: event.currentTarget.value});\n}\n\ncomponentDidUpdate(prevState){\n  if(this.state.contacts !== prevState.contacts){\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n}\n\ncomponentDidMount(){\n  const contacts = localStorage.getItem('contacts');\n  const parsedContacts = JSON.parse(contacts);\n  this.setState({contacts: parsedContacts});\n}\n\n  render (){\n\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n      );\n\nreturn (\n<div>\n  <ContactForm onSubmit={this.formSubmitHandler}/>\n  <Filter filter={this.state.filter} onChangeFilter={this.changeFilter}/>\n  <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\n</div>\n)}\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}